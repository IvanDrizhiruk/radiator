# ===================================================================
# Spring Boot configuration.
#
# This configuration will be overriden by the Spring profile you use,
# for example application-dev.yml if you use the "dev" profile.
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

management:
    context-path: /management
    health:
        mail:
          enabled: false # When using the MailService, configure an SMTP server and set this to true

spring:
    application:
        name: radiator
    profiles:
        # The commented value for `active` can be replaced with valid spring profiles to load.
        # This will be overwritten by `--spring.profiles.active` value passed in the commandline or `-Dspring.profiles.active` set in `JAVA_OPTS`
        active: #spring.profiles.active#
    jpa:
        open-in-view: false
        hibernate:
            ddl-auto: none
            naming-strategy: org.springframework.boot.orm.jpa.hibernate.SpringNamingStrategy
    messages:
        basename: i18n/messages
    mvc:
        favicon:
            enabled: false
    thymeleaf:
        mode: XHTML

security:
    basic:
        enabled: false

# ===================================================================
# JHipster specific properties
# ===================================================================

jhipster:
    async:
        corePoolSize: 2
        maxPoolSize: 50
        queueCapacity: 10000
    #cors: #By default CORS are not enabled. Uncomment to enable.
        #allowed-origins: "*"
        #allowed-methods: GET, PUT, POST, DELETE, OPTIONS
        #allowed-headers: "*"
        #exposed-headers:
        #allow-credentials: true
        #max-age: 1800
    mail:
        from: radiator@localhost
    swagger:
        title: radiator API
        description: radiator API documentation
        version: 0.0.1
        termsOfServiceUrl:
        contactName:
        contactUrl:
        contactEmail:
        license:
        licenseUrl:
    ribbon:
        # comma seperated list of profiles to show a ribbon on the GUI
        displayOnActiveProfiles: dev

# ===================================================================
# Radiator specific properties
# ===================================================================

radiator:
    buildState:
        cron: '*/10 * * * * *'
        brokenSound: audio/GLASS.WAV
        errorMessage: Build has been broken
        emailFormat: '%s@ardas.dp.ua'
        instances:
            -
                name: BUILD
                configUrl: http://jenkins-cerri.devel.ardas.dp.ua:8080/job/cerri-build
                errorMessage: Cerri front-end Build has been broken
            -
                name: STAGING
                configUrl: http://jenkins-cerri.devel.ardas.dp.ua:8080/job/cerri-deploy
                errorMessage: Cerri staging deploy has been broken
            -
                name: UI_TESTS
                configUrl: http://jenkins-cerri.devel.ardas.dp.ua:8080/job/0-ci-e2e-main
                errorMessage: Protractor tests has been broken
        auth:
            username: user
            password: password
    integrationTest:
        cron: '*/10 * * * * *'
        instances:
            -
                name: Central / Task
                url: http://jenkins-cerri.devel.ardas.dp.ua:82/last/result.xml
            -
                name: Gantt
                url: http://jenkins-cerri.devel.ardas.dp.ua:82/last/result.xml
    kanbanflow:
        cron: '0 */10 * * * *'
        boardConfigs:
            -
                boardName: Central / Task
                url: https://kanbanflow.com/api/v1/
                token: 9d2e110ca46f3c5c81e8ed8c703e8c5e
                columnNumbers: [4, 5, 6, 7, 8, 9, 10, 11]
