<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
	xmlns:sec="http://www.springframework.org/schema/security" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:sws="http://www.springframework.org/schema/web-services"
	xsi:schemaLocation="http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2-1.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd 
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
		http://www.springframework.org/schema/web-services http://www.springframework.org/schema/web-services/web-services-2.0.xsd"

	default-autowire="byName">

	<context:annotation-config />
	<context:component-scan base-package="ua.dp.ardas.radiator" />

	<mvc:annotation-driven />
	<mvc:default-servlet-handler /> 

	<task:annotation-driven />
	<task:scheduler id="scheduler" pool-size="3" />

	<!-- authentication block -->
	<!-- Credentials provider needed by apache default http client -->
	<bean id="credentialProvider" class="org.apache.http.impl.client.BasicCredentialsProvider" />
	
	<!-- Used to invoke a method in BasicCredentialsProvider.  This has to be done this way as BasicCredentialsProvider does not take 
	provider and credentials in constructor or setter method.  It has to set by invoking setCredentials() method and passing two arguments -->  
	<bean id="methodInvoke" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
	    <property name="targetObject"><ref local="credentialProvider" /> </property>
	    <property name="targetMethod" value="setCredentials"> </property>
	    <property name="arguments"  >
	        <list>
	            <ref local="authScope" />
	            <ref local="credentials" />
	        </list>
	    </property>
	</bean>
	
	<!-- Authorization scope for accessing restful service.  Since we want this template to be used for everything, we are setting up it with defaults -->
	<bean id="authScope" class="org.apache.http.auth.AuthScope">
	    <constructor-arg name="host"><null /></constructor-arg>
	    <constructor-arg><value>-1</value> </constructor-arg>
	    <constructor-arg><null /></constructor-arg>
	    <constructor-arg><null /></constructor-arg>
	</bean>
	
	<!-- Username and Password Credentials to access restful service -->
	<bean id="credentials" class="org.apache.http.auth.UsernamePasswordCredentials">
	    <constructor-arg name="userName"><value>${username}</value></constructor-arg>
	    <constructor-arg name="password"><value>${password}</value></constructor-arg>
	</bean>
	
	<!-- Client factory which uses Apache HttpClient implementation.  Note that it DO NOT use apache commons httpclient -->
	<bean id="httpClientFactory" class="org.springframework.http.client.HttpComponentsClientHttpRequestFactory"> 
	    <constructor-arg ref="httpClient"/> 
	</bean>
	
	<bean id="httpClient" class="org.apache.http.impl.client.DefaultHttpClient">
	    <property name="credentialsProvider" ref="credentialProvider"/>
	</bean>

	<!-- Rest client -->
	<bean id="restTemplate" class="org.springframework.web.client.RestTemplate"
		autowire-candidate="true">
		<constructor-arg ref="httpClientFactory" />
	
		<property name="messageConverters">
			<list>
		      <bean class="org.springframework.http.converter.StringHttpMessageConverter">
		      	<!-- property name = "supportedMediaTypes">
					<list>
						 <value>text/plain;charset=UTF-8</value>
						 <value>text/plain;charset=US-ASCII</value>
					</list>
				</property-->
		      </bean>
		      <bean class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter" />
		      <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		      	<property name = "supportedMediaTypes">
					<list>
						 <value>application/json</value>
						 <value>application/javascript</value>
					</list>
				</property>
		         <!-- property name="objectMapper">
		            <bean class="ua.dp.ardas.radiator.resr.client.RadiatorObjectMapper"/>
		         </property-->
		      </bean>		      
	      	</list>
			
		</property>
	</bean>
	
	
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
	   <property name="messageConverters">
	   		<list>
		      <bean class="org.springframework.http.converter.StringHttpMessageConverter" />
		      <bean class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter" />
		      <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		      	<property name = "supportedMediaTypes">
					<list>
						 <value>application/json</value>
						 <value>application/javascript</value>
					</list>
				</property>
		         <!-- property name="objectMapper">
		            <bean class="ua.dp.ardas.radiator.resr.client.RadiatorObjectMapper"/>
		         </property-->
		      </bean>		      
	      </list>
	   </property>
	</bean> 
	
	
	
	
	
	
	
	
	

</beans>
